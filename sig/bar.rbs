#
# Gruff::Bar provide a bar graph that presents categorical data
# with rectangular bars.
#
# Here's how to set up a Gruff::Bar.
#
#   g = Gruff::Bar.new
#   g.title = 'Bar Graph With Manual Colors'
#   g.spacing_factor = 0.1
#   g.group_spacing = 20
#   g.data :Art, [0, 5, 8, 15], '#990000'
#   g.data :Philosophy, [10, 3, 2, 8], '#009900'
#   g.data :Science, [2, 15, 8, 11], '#990099'
#   g.write('bar.png')
#
class Gruff::Bar < Gruff::Base
  @spacing_factor: untyped

  @group_spacing: untyped

  @label_formatting: untyped

  @show_labels_for_bar_values: untyped

  @hide_labels: untyped

  # Labels will be centered over the left of the bar if
  # there are more labels than columns. This is basically the same
  # as where it would be for a line graph.
  @center_labels_over_point: untyped

  @graph_top: untyped

  @graph_height: untyped

  # Setup spacing.
  #
  # Columns sit side-by-side.
  @bar_spacing: untyped

  include Gruff::Base::BarMixin

  # Spacing factor applied between bars.
  attr_writer bar_spacing: untyped

  # Spacing factor applied between a group of bars belonging to the same label.
  attr_writer group_spacing: untyped

  # Set the number output format string or lambda.
  # Default is +"%.2f"+.
  attr_writer label_formatting: untyped

  # Output the values for the bars on a bar graph.
  # Default is +false+.
  attr_writer show_labels_for_bar_values: untyped

  # Prevent drawing of column labels below a bar graph.  Default is +false+.
  attr_writer hide_labels: untyped

  # Value to avoid completely overwriting the coordinate axis
  AXIS_MARGIN: ::Float

  # Can be used to adjust the spaces between the bars.
  # Accepts values between 0.00 and 1.00 where 0.00 means no spacing at all
  # and 1 means that each bars' width is nearly 0 (so each bar is a simple
  # line with no x dimension).
  #
  # Default value is +0.9+.
  def spacing_factor=: (untyped space_percent) -> untyped

  private

  def initialize_attributes: () -> untyped

  def setup_drawing: () -> untyped

  def hide_labels?: () -> untyped

  def hide_left_label_area?: () -> untyped

  def hide_bottom_label_area?: () -> untyped

  def setup_graph_measurements: () -> (nil | untyped)

  def draw_graph: () -> untyped

  def calculate_spacing: () -> untyped

  def proc_text_metrics: () -> untyped
end
