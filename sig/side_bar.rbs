# Graph with individual horizontal bars instead of vertical bars.
#
# Here's how to set up a Gruff::SideBar.
#
#   g = Gruff::SideBar.new
#   g.title = 'SideBar Graph'
#   g.labels = {
#     0 => '5/6',
#     1 => '5/15',
#     2 => '5/24',
#     3 => '5/30',
#   }
#   g.group_spacing = 20
#   g.data :Art, [0, 5, 8, 15]
#   g.data :Philosophy, [10, 3, 2, 8]
#   g.data :Science, [2, 15, 8, 11]
#   g.write('sidebar.png')
#
class Gruff::SideBar < Gruff::Base
  @has_left_labels: untyped

  @bar_spacing: untyped

  @group_spacing: untyped

  @label_formatting: untyped

  @show_labels_for_bar_values: untyped

  @hide_labels: untyped

  @graph_right: untyped

  @graph_left: untyped

  @graph_width: untyped

  include Gruff::Base::BarMixin

  # Spacing factor applied between bars.
  attr_writer bar_spacing: untyped

  # Spacing factor applied between a group of bars belonging to the same label.
  attr_writer group_spacing: untyped

  # Set the number output format string or lambda.
  # Default is +"%.2f"+.
  attr_writer label_formatting: untyped

  # Output the values for the bars on a bar graph.
  # Default is +false+.
  attr_writer show_labels_for_bar_values: untyped

  # Prevent drawing of column labels left of a side bar graph.  Default is +false+.
  attr_writer hide_labels: untyped

  # Value to avoid completely overwriting the coordinate axis
  AXIS_MARGIN: ::Float

  def initialize: (*untyped) -> void

  # With Side Bars use the data label for the marker value to the left of the bar.
  # @deprecated
  def use_data_label=: (untyped _value) -> untyped

  private

  def initialize_attributes: () -> untyped

  def hide_labels?: () -> untyped

  def hide_left_label_area?: () -> untyped

  def hide_bottom_label_area?: () -> untyped

  def setup_graph_measurements: () -> (nil | untyped)

  def draw_graph: () -> untyped

  # Instead of base class version, draws vertical background lines and label
  def draw_line_markers: () -> (nil | untyped)

  def draw_label: (untyped y_offset, untyped index) -> untyped

  def calculate_spacing: () -> untyped

  def proc_text_metrics: () -> untyped
end
